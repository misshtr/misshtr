.global _start
_start:	


   	 MOV   	 R1, R3
   	 MOV   	 R2, R5
   	 LSR   	 R1, R1, #31    	//GETS 32BIT
   	 LSR   	 R2, R2, #31  	  //GETS 32BIT
   	 CMP   	 R1, R2   	 	//COMPARE IF SAME SIGN?
   	 BNE   	 not_equal    	 //ENTERS EQUAL
   				 //THEYRE    BOTH THE SAME SIGN
   	 CMP   	 R1, #0
   	 MOVNE    R7, R1		//BOTH NEGATIVE
   	 MOVEQ    R7, R1   	 //BOTH POSITIVE
not_equal:
   	 BEQ   	 equal   	 	//ENTERS NOT EQUAL
   	 MOV   	 R10, R3
   	 MOV   	 R11, R5
   	 LSL   	 R10, R10, #4
   	 LSL   	 R11, R11, #4
   	 LSR   	 R10, R10, #4
   	 LSR   	 R11, R11, #4
   	 CMP   	 R10, R11
   	 BGT   	 bigger    		//R3<R5
   	 CMP   	 R1, #1   			 //R3<0?
   	 MOVEQ    R7, #0   		 //RES IS POS
   	 MOVNE    R7, #1    		//RES IS NEG
   	 
bigger:
   	 BLT   	 smaller    		//R3>R5
   	 CMP   	 R2, #1    		//R5<0?
   	 MOVEQ    R7, #0    		//RES IS POS
   	 MOVNE    R7, #1    		//RES IS NEG
   	 
smaller:
equal:
   	 
   	 ADDS   	 R9, R4, R6
   	 ADCS   	 R8, R3, R5
   	 

